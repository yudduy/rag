# Performance Monitoring Configuration for Enhanced RAG System
# This configuration defines comprehensive monitoring, alerting, and SLA tracking

# Global Monitoring Settings
monitoring:
  enabled: true
  collection_interval: 30s
  retention_period: 30d
  export_format: ["prometheus", "json", "csv"]
  
# Performance Metrics Collection
metrics:
  # Response Time Metrics
  response_time:
    percentiles: [50, 75, 90, 95, 99]
    buckets: [0.1, 0.5, 1.0, 2.0, 5.0, 10.0, 30.0]  # seconds
    labels: ["profile", "query_type", "component"]
    
  # Throughput Metrics
  throughput:
    window_sizes: ["1m", "5m", "15m", "1h"]
    aggregations: ["rate", "increase", "avg"]
    
  # Resource Usage Metrics
  resources:
    cpu:
      thresholds:
        warning: 70
        critical: 85
      collection_interval: 15s
    
    memory:
      thresholds:
        warning: 1200  # MB
        critical: 1800  # MB
      track_growth_rate: true
      leak_detection_window: 1h
    
    network:
      track_bandwidth: true
      connection_pool_monitoring: true
      thresholds:
        max_connections: 100
        avg_connection_time: 50ms

# Component-Specific Monitoring
components:
  unified_workflow:
    metrics:
      - orchestration_latency
      - plan_creation_time
      - routing_accuracy
      - component_health_checks
    alerts:
      orchestration_slow:
        condition: "orchestration_latency_p95 > 150ms"
        duration: 5m
        severity: warning
      
      routing_errors:
        condition: "routing_error_rate > 5%"
        duration: 2m
        severity: critical
  
  semantic_cache:
    metrics:
      - cache_hit_rate
      - cache_lookup_time
      - cache_size
      - eviction_rate
      - similarity_computation_time
    alerts:
      low_hit_rate:
        condition: "cache_hit_rate < 20%"
        duration: 10m
        severity: warning
      
      cache_performance_degraded:
        condition: "cache_lookup_time_p95 > 10ms"
        duration: 5m
        severity: warning
      
      redis_connection_lost:
        condition: "redis_connection_available == 0"
        duration: 1m
        severity: critical
  
  verification_pipeline:
    metrics:
      - verification_latency
      - confidence_scores
      - hallucination_detection_rate
      - batch_processing_efficiency
    alerts:
      verification_timeout:
        condition: "verification_timeout_rate > 10%"
        duration: 5m
        severity: warning
      
      low_confidence_trend:
        condition: "avg_confidence_score < 0.8"
        duration: 15m
        severity: warning
      
      verification_pipeline_down:
        condition: "verification_success_rate < 50%"
        duration: 2m
        severity: critical
  
  multimodal_processing:
    metrics:
      - image_processing_time
      - clip_model_performance
      - ocr_success_rate
      - memory_usage_per_image
    alerts:
      clip_model_slow:
        condition: "image_processing_time_p95 > 500ms"
        duration: 5m
        severity: warning
      
      ocr_high_failure_rate:
        condition: "ocr_failure_rate > 20%"
        duration: 10m
        severity: warning
      
      multimodal_memory_spike:
        condition: "multimodal_memory_usage > 800MB"
        duration: 5m
        severity: critical

# Performance Profile Monitoring
profiles:
  high_accuracy:
    sla_targets:
      response_time_p95: 5.0s
      accuracy_rate: 96%
      verification_success_rate: 98%
      availability: 99.5%
    
    alerts:
      accuracy_below_target:
        condition: "accuracy_rate < 96%"
        duration: 15m
        severity: critical
      
      response_time_exceeded:
        condition: "response_time_p95 > 5.0s"
        duration: 10m
        severity: warning

  balanced:
    sla_targets:
      response_time_p95: 3.0s
      accuracy_rate: 90%
      cost_per_query: $0.05
      availability: 99.9%
    
    alerts:
      response_time_exceeded:
        condition: "response_time_p95 > 3.0s"
        duration: 5m
        severity: warning
      
      cost_budget_exceeded:
        condition: "daily_cost > daily_budget * 1.2"
        duration: 1m
        severity: critical

  cost_optimized:
    sla_targets:
      cost_per_query: $0.02
      cache_hit_rate: 50%
      accuracy_rate: 85%
      availability: 99%
    
    alerts:
      cost_target_exceeded:
        condition: "avg_cost_per_query > $0.02"
        duration: 30m
        severity: warning
      
      cache_underperforming:
        condition: "cache_hit_rate < 30%"
        duration: 20m
        severity: warning

  speed:
    sla_targets:
      response_time_p95: 1.5s
      cache_hit_rate: 60%
      accuracy_rate: 80%
      availability: 99.9%
    
    alerts:
      speed_target_missed:
        condition: "response_time_p95 > 1.5s"
        duration: 3m
        severity: critical
      
      cache_hit_rate_low:
        condition: "cache_hit_rate < 40%"
        duration: 10m
        severity: warning

# System Health Monitoring
health_checks:
  endpoints:
    - path: /health
      interval: 30s
      timeout: 5s
      expected_status: 200
    
    - path: /health/components
      interval: 60s
      timeout: 10s
      expected_status: 200
    
    - path: /metrics
      interval: 30s
      timeout: 5s
      expected_status: 200

  dependencies:
    redis:
      check: "redis_ping"
      interval: 30s
      timeout: 5s
      critical: true
    
    openai_api:
      check: "api_key_valid"
      interval: 300s  # 5 minutes
      timeout: 30s
      critical: true
    
    llamadeploy:
      check: "service_discovery"
      interval: 60s
      timeout: 10s
      critical: true

# Alerting Configuration
alerting:
  notification_channels:
    email:
      enabled: true
      smtp_server: "smtp.company.com"
      recipients:
        critical: ["oncall-engineering@company.com", "performance-team@company.com"]
        warning: ["performance-team@company.com"]
        info: ["dev-team@company.com"]
    
    slack:
      enabled: true
      webhook_url: "${SLACK_WEBHOOK_URL}"
      channels:
        critical: "#alerts-critical"
        warning: "#alerts-warning"
        info: "#dev-notifications"
    
    pagerduty:
      enabled: true
      integration_key: "${PAGERDUTY_INTEGRATION_KEY}"
      escalation_policy: "performance-escalation"

  alert_rules:
    # System-wide alerts
    system_overloaded:
      condition: "cpu_usage > 90% AND memory_usage > 80%"
      duration: 3m
      severity: critical
      description: "System resources critically overloaded"
    
    high_error_rate:
      condition: "error_rate > 5%"
      duration: 5m
      severity: critical
      description: "Application error rate too high"
    
    response_time_degraded:
      condition: "response_time_p95 > baseline * 2"
      duration: 10m
      severity: warning
      description: "Response times significantly degraded"
    
    # Cost management alerts
    daily_cost_exceeded:
      condition: "daily_cost > daily_budget"
      duration: 1m
      severity: critical
      description: "Daily cost budget exceeded"
    
    cost_trend_concerning:
      condition: "hourly_cost_growth > 50%"
      duration: 30m
      severity: warning
      description: "Cost growth rate concerning"

  escalation_rules:
    - alert_severity: critical
      initial_delay: 0m
      escalation_steps:
        - delay: 0m
          notify: ["slack:critical", "pagerduty"]
        - delay: 15m
          notify: ["email:critical", "slack:critical"]
        - delay: 30m
          notify: ["email:critical", "pagerduty"]
    
    - alert_severity: warning
      initial_delay: 5m
      escalation_steps:
        - delay: 5m
          notify: ["slack:warning"]
        - delay: 30m
          notify: ["email:warning"]

# Performance Dashboards
dashboards:
  overview:
    title: "RAG System Performance Overview"
    refresh_interval: 30s
    panels:
      - title: "Request Rate"
        type: "graph"
        metrics: ["requests_per_second"]
        time_range: "1h"
      
      - title: "Response Time Percentiles"
        type: "graph"
        metrics: ["response_time_p50", "response_time_p95", "response_time_p99"]
        time_range: "1h"
      
      - title: "Error Rate"
        type: "stat"
        metrics: ["error_rate"]
        thresholds: [1, 5]  # warning at 1%, critical at 5%
      
      - title: "System Resources"
        type: "graph"
        metrics: ["cpu_usage", "memory_usage_mb"]
        time_range: "1h"

  component_health:
    title: "Component Health Dashboard"
    refresh_interval: 60s
    panels:
      - title: "Cache Performance"
        type: "graph"
        metrics: ["cache_hit_rate", "cache_lookup_time_p95"]
        time_range: "4h"
      
      - title: "Verification Pipeline"
        type: "graph" 
        metrics: ["verification_latency_p95", "confidence_score_avg"]
        time_range: "4h"
      
      - title: "Component Status"
        type: "stat"
        metrics: ["components_healthy", "components_total"]
        display: "percentage"

  performance_profiles:
    title: "Performance Profiles SLA Tracking"
    refresh_interval: 300s  # 5 minutes
    panels:
      - title: "Profile SLA Compliance"
        type: "heatmap"
        metrics: ["sla_compliance_by_profile"]
        time_range: "24h"
      
      - title: "Cost per Profile"
        type: "graph"
        metrics: ["cost_per_query_by_profile"]
        time_range: "24h"
      
      - title: "Quality Metrics"
        type: "graph"
        metrics: ["accuracy_by_profile"]
        time_range: "24h"

# Data Export and Analysis
export:
  prometheus:
    enabled: true
    endpoint: "/metrics"
    port: 9090
    
  json_logs:
    enabled: true
    file_path: "/var/log/rag-system/performance.log"
    rotation: "daily"
    retention: "30d"
    
  csv_export:
    enabled: true
    export_interval: "1h"
    output_dir: "/var/export/rag-performance"
    metrics: ["response_times", "throughput", "errors", "costs"]

# Performance Testing Integration
testing_integration:
  load_test_monitoring:
    enabled: true
    test_run_identification: "automated"
    baseline_comparison: true
    regression_detection: true
    
  benchmark_tracking:
    track_improvements: true
    track_regressions: true
    alert_on_regression: true
    regression_threshold: 20%  # Alert if performance degrades by 20%

# Cost Monitoring
cost_tracking:
  enabled: true
  granularity: "per_query"
  budgets:
    daily: $100.00
    weekly: $600.00
    monthly: $2000.00
  
  cost_breakdown:
    by_component: true
    by_profile: true
    by_query_type: true
  
  optimization_tracking:
    cache_savings: true
    model_cost_efficiency: true
    batch_processing_savings: true

# Compliance and Reporting
compliance:
  sla_reporting:
    enabled: true
    report_frequency: "weekly"
    stakeholders:
      - "performance-team@company.com"
      - "engineering-management@company.com"
    
    metrics_included:
      - availability
      - response_times
      - error_rates
      - cost_efficiency
      - accuracy_rates
  
  performance_reviews:
    monthly_review: true
    quarterly_planning: true
    annual_capacity_planning: true